#include<SPI.h>
#include<SD.h>

const uint8_t p_ACC_CS = 8;
const uint8_t p_SD_CD = 9;
const uint8_t p_SD_CS = 10;

#define POWER_CTL 0x2D
#define DATA_FORMAT 0x31
#define DATAX0 0x32
#define DATAX1 0x33
#define DATAY0 0x34
#define DATAY1 0x35
#define DATAZ0 0x36
#define DATAZ1 0x37

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  pinMode(p_SD_CS, OUTPUT);
  pinMode(p_SD_CD, INPUT_PULLUP);
  pinMode(p_ACC_CS, OUTPUT);
  digitalWrite(p_ACC_CS, HIGH);
  digitalWrite(p_SD_CS, HIGH);
  SPI.begin();
  SPI.setDataMode(SPI_MODE3);
  writeRegister(DATA_FORMAT, 0x01);
  writeRegister(POWER_CTL, 0x08);
  Serial.print("Initializing SD card...");
  if(!SD.begin(p_SD_CS)){
    Serial.println("card failed, or not present.");
    return;
  }
  Serial.println("card initialized.");
}

void writeRegister(uint8_t registerAddress, uint8_t data) {
  digitalWrite(p_ACC_CS, LOW);
  SPI.transfer(registerAddress);
  SPI.transfer(data);
  digitalWrite(p_ACC_CS, HIGH);

}

void readRegister(uint8_t registerAddress, uint8_t numBytes, uint8_t * values) {
  uint8_t address = registerAddress|= 0x80;
  if(numBytes>1) address|=0x40;
  digitalWrite(p_ACC_CS, LOW);
  SPI.transfer(address);
  for (uint8_t i=0; i<numBytes; i++){
    values[i] = SPI.transfer (0x00);
  }
  digitalWrite(p_ACC_CS, HIGH);
}

void loop() {
  // put your main code here, to run repeatedly:
  SPI.setDataMode(SPI_MODE3);
  uint8_t values[10];
  readRegister(DATAX0, 6, values);
  int16_t x, y, z;
  x=((int16_t)values[1]<<8)|(int16_t)values[0];
  y=((int16_t)values[3]<<8)|(int16_t)values[2];
  z=((int16_t)values[5]<<8)|(int16_t)values[4];
  Serial.print("z=");
  Serial.print(z,DEC);
  Serial.print(" ");
  float sine_angle_z = ((z-0.00)/123.00);
  if(sine_angle_z>1){
    sine_angle_z=1;
  }
  else if (sine_angle_z<-1){
    sine_angle_z=-1;
  }
  Serial.print("sine_angle_z= ");
  Serial.print(sine_angle_z);
  Serial.print("  ");

  float angle_z_degrees = asin(sine_angle_z)*RAD_TO_DEG;
  Serial.print("angle_z_degrees=");
  Serial.println(angle_z_degrees);
  delay(250);
  SPI.setDataMode(SPI_MODE0);
  File dataFile=SD.open("datalog.csv", FILE_WRITE);
  if(dataFile){
    dataFile.println(angle_z_degrees);
    dataFile.close();
  }
  else{
    Serial.println("Error opening datalog.csv");
  }
}
